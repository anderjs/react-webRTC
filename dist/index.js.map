{"version":3,"file":"index.js","sources":["../src/context/index.tsx","../src/hooks/useWebRTCAdapterState/index.ts","../src/hooks/useLocalPeerConnection/index.tsx","../src/hooks/useRemotePeerConnection/index.tsx","../src/hooks/useMediaDevices/index.tsx","../src/hooks/useRTCIceCandidate/index.ts","../src/components/Adapter/index.tsx","../src/components/WebRTCAdapter/index.tsx","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/components/RTCPeerConnection/index.tsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport { createContext } from 'react'\r\n\r\nexport interface WebRTCAdapterContext {\r\n  remotePeerConnection: RTCPeerConnection\r\n  localPeerConnection: RTCPeerConnection\r\n  localMediaStream?: MediaStream | null\r\n  getUserMedia?: (constraints: MediaStreamConstraints) => Promise<MediaStream | null>\r\n}\r\n\r\nconst RTC = createContext<WebRTCAdapterContext>({\r\n  remotePeerConnection: new RTCPeerConnection(),\r\n  localPeerConnection: new RTCPeerConnection(),\r\n})\r\n\r\nexport default RTC","/* eslint-disable prettier/prettier */\r\nimport { useContext } from 'react'\r\n\r\nimport RTC from 'context'\r\n\r\nfunction useWebRTCAdapterState () {\r\n  const state = useContext(RTC)\r\n  \r\n  return state\r\n}\r\n\r\nexport default useWebRTCAdapterState","/* eslint-disable prettier/prettier */\r\nimport useWebRTCAdapterState from 'hooks/useWebRTCAdapterState'\r\n\r\n\r\n\r\nfunction useLocalPeerConnection () {\r\n  const { localPeerConnection } = useWebRTCAdapterState()\r\n\r\n  return localPeerConnection\r\n}\r\n\r\n\r\nexport default useLocalPeerConnection","/* eslint-disable prettier/prettier */\r\nimport useWebRTCAdapterState from 'hooks/useWebRTCAdapterState'\r\n\r\n\r\nfunction useRemotePeerConnection () {\r\n  const { remotePeerConnection } = useWebRTCAdapterState()\r\n\r\n  return remotePeerConnection\r\n}\r\n\r\n\r\nexport default useRemotePeerConnection","/* eslint-disable prettier/prettier */\r\nimport { useState, useEffect } from 'react'\r\n\r\ninterface MediaDevicesHook {\r\n  localMediaStream: MediaStream | null\r\n  error: Error | null\r\n}\r\n\r\n\r\nfunction useMediaDevices(constraints?: MediaStreamConstraints): MediaDevicesHook {\r\n  const [localMediaStream, setLocalMediaStream] = useState<MediaStream | null>(\r\n    null\r\n  )\r\n\r\n  const [error, setError] = useState<Error | null>(null)\r\n\r\n  useEffect(() => {\r\n    if (navigator?.mediaDevices?.getUserMedia) {\r\n      navigator.mediaDevices\r\n        .getUserMedia(constraints)\r\n        .then(setLocalMediaStream)\r\n        .catch(setError)\r\n    } else {\r\n      const err = new Error(\r\n        'Unsupoorted mediaDevices see: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices'\r\n      )\r\n\r\n      setError(err)\r\n    }\r\n  }, [])\r\n\r\n  return {\r\n    localMediaStream,\r\n    error\r\n  }\r\n}\r\n\r\nexport default useMediaDevices\r\n","/* eslint-disable prettier/prettier */\r\n\r\n\r\nfunction useRTCIceCandidate () {\r\n  function handleICECandidateConnection (event: RTCPeerConnectionIceEvent) {\r\n    const connection = event.target\r\n\r\n    const iceCandidate = event.candidate\r\n\r\n    if (iceCandidate) {\r\n      const newIceCandidate = new RTCIceCandidate(iceCandidate);\r\n\r\n      console.debug(newIceCandidate.usernameFragment)\r\n\r\n      return {\r\n        connection,\r\n        newIceCandidate\r\n      }\r\n    }\r\n    \r\n    return null\r\n  }\r\n\r\n  return {\r\n    handleICECandidateConnection\r\n  }\r\n}\r\n\r\n\r\nexport default useRTCIceCandidate","/* eslint-disable prettier/prettier */\r\nimport React from 'react'\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Adapter: React.FunctionComponent<Props> = ({ children }) => {\r\n  React.useEffect(() => {\r\n    const script = document.createElement('script')\r\n\r\n    script.src = \"https://webrtc.github.io/adapter/adapter-latest.js\"\r\n\r\n    document.body.appendChild(script)\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {children}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Adapter","/* eslint-disable prettier/prettier */\r\nimport React, { memo, useState, useMemo } from 'react'\r\n\r\n\r\nimport Adapter from 'components/Adapter'\r\n\r\nimport RTC from 'context'\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n  localPeerConfiguration?: RTCConfiguration\r\n  remotePeerConfiguration?: RTCConfiguration\r\n}\r\n\r\nconst WebRTCAdapter: React.FunctionComponent<Props> = ({\r\n  children,\r\n  localPeerConfiguration,\r\n  remotePeerConfiguration\r\n}) => {\r\n  const [localPeerConnection] = useState(\r\n    new RTCPeerConnection(localPeerConfiguration)\r\n  )\r\n\r\n  const [remotePeerConnection] = useState(\r\n    new RTCPeerConnection(remotePeerConfiguration)\r\n  )\r\n\r\n  const [localMediaStream, setLocalMediaStream] = useState<MediaStream | null>(null)\r\n\r\n  async function getUserMedia (constraints: MediaStreamConstraints) {\r\n    if (navigator?.mediaDevices?.getUserMedia) {\r\n      const stream = await navigator.mediaDevices.getUserMedia(constraints)\r\n\r\n      setLocalMediaStream(stream)\r\n\r\n      return stream\r\n    }\r\n    return null\r\n  }\r\n\r\n  const memo = useMemo(() => {\r\n    return {\r\n      localPeerConnection,\r\n      remotePeerConnection,\r\n      localMediaStream,\r\n      getUserMedia\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Adapter>\r\n      <RTC.Provider value={memo}>\r\n        {children}\r\n      </RTC.Provider>\r\n    </Adapter>\r\n  )\r\n}\r\n\r\nexport default memo(WebRTCAdapter)\r\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","/* eslint-disable prettier/prettier */\r\nimport React from 'react'\r\n\r\nimport useLocalPeerConnection from 'hooks/useLocalPeerConnection'\r\nimport useRemotePeerConnection from 'hooks/useRemotePeerConnection'\r\n\r\ninterface Props {\r\n  onSuccessHandleCandidate?: () => void\r\n  onErrorHandleCanidate?: () => void\r\n  onConnectionStateChange?: () => void\r\n}\r\n\r\nconst RTCPeerConnectionHandler: React.FunctionComponent<Props> = props => {\r\n  const localPeerConnection = useLocalPeerConnection()\r\n\r\n  const remotePeerConnection = useRemotePeerConnection()\r\n\r\n  async function handleConnectionSuccess(event: RTCPeerConnectionIceEvent) {\r\n    const peerConnection = event?.target\r\n\r\n    const iceCandidate = event?.candidate\r\n\r\n    if (iceCandidate) {\r\n      const newIceCandidate = new RTCIceCandidate(iceCandidate)\r\n\r\n      const getOutgoingPeer = getPeerConnectionHandler(peerConnection)\r\n\r\n      try {\r\n        await getOutgoingPeer.addIceCandidate(newIceCandidate)\r\n\r\n        props.onSuccessHandleCandidate && props.onSuccessHandleCandidate()\r\n      } catch (err) {\r\n        props.onErrorHandleCanidate && props.onErrorHandleCanidate()\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleConnectionChange(event: RTCPeerConnectionIceEvent) {\r\n    console.trace(`${getPeerName(event.target)} ICE State: null`)\r\n\r\n    if (props.onConnectionStateChange) {\r\n      props.onConnectionStateChange()\r\n    }\r\n  }\r\n\r\n  function getPeerName(peerConnection: EventTarget | null): string {\r\n    return peerConnection === localPeerConnection\r\n      ? 'localPeerConnection'\r\n      : 'remotePeerConnection'\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    localPeerConnection.addEventListener(\r\n      'icecandidate',\r\n      handleConnectionSuccess\r\n    )\r\n    localPeerConnection.addEventListener(\r\n      'iceconnectionstatechange',\r\n      handleConnectionChange\r\n    )\r\n\r\n    remotePeerConnection.addEventListener(\r\n      'icecandidate',\r\n      handleConnectionSuccess\r\n    )\r\n    remotePeerConnection.addEventListener(\r\n      'iceconnectionstatechange',\r\n      handleConnectionChange\r\n    )\r\n  }, [])\r\n\r\n  const getPeerConnectionHandler = (peerConnection: EventTarget | null) => {\r\n    return peerConnection === localPeerConnection\r\n      ? remotePeerConnection\r\n      : localPeerConnection\r\n  }\r\n\r\n  return <React.Fragment>{props.children}</React.Fragment>\r\n}\r\n\r\nexport default RTCPeerConnectionHandler\r\n"],"names":["RTC","createContext","remotePeerConnection","RTCPeerConnection","localPeerConnection","useWebRTCAdapterState","state","useContext","useLocalPeerConnection","useRemotePeerConnection","useMediaDevices","constraints","useState","localMediaStream","setLocalMediaStream","error","setError","useEffect","navigator","mediaDevices","getUserMedia","then","err","Error","useRTCIceCandidate","handleICECandidateConnection","event","connection","target","iceCandidate","candidate","newIceCandidate","RTCIceCandidate","console","debug","usernameFragment","Adapter","children","React","script","document","createElement","src","body","appendChild","Fragment","WebRTCAdapter","stream","localPeerConfiguration","remotePeerConfiguration","memo","useMemo","Provider","value","RTCPeerConnectionHandler","props","handleConnectionSuccess","peerConnection","getOutgoingPeer","getPeerConnectionHandler","addIceCandidate","onSuccessHandleCandidate","onErrorHandleCanidate","handleConnectionChange","trace","getPeerName","onConnectionStateChange","addEventListener"],"mappings":"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"}